### Request 1: Create a project
POST http://localhost:3000/projects HTTP/1.1
content-type: application/json

{
    "name": "Hash Map",
    "status": "Completed",
    "description": "An awesome hash map!",
    "link": "www.link.com",
    "date": "01-18-22"
}

### Request 2: Create another project
POST http://localhost:3000/projects HTTP/1.1
content-type: application/json

{
    "name": "Website",
    "status": "In Progress",
    "description": "Simple website with http and css.",
    "unit": "link.com",
    "date": "01-18-22"
}

### Request 3: Create a project
POST http://localhost:3000/projects HTTP/1.1
content-type: application/json

{
    "name": "Linked List",
    "status": "Completed",
    "description": "Linked List.",
    "unit": "link.com",
    "date": "01-25-22"
}

### Request 4: Create another project
POST http://localhost:3000/projects HTTP/1.1
content-type: application/json

{
    "name": "Fancy Website",
    "status": "In Progress",
    "description": "Fancy React site.",
    "unit": "link.com",
    "date": "01-18-22"
}

### Request 5: Create with missing property 400 status code
POST http://localhost:3000/projects HTTP/1.1
content-type: application/json

{
    "name": "Website",
    "status": "In Progress",
    "unit": "link.com",
    "date": "01-18-22"
}

### Request 6: Create with missing link ok, link not required.
POST http://localhost:3000/projects HTTP/1.1
content-type: application/json

{
    "name": "Website",
    "status": "In Progress",
    "description": "Simple website with http and css.",
    "date": "01-18-22"
}

### Request 7: Create with invalid property 400 status code
POST http://localhost:3000/projects HTTP/1.1
content-type: application/json

{
    "name": "Website",
    "status": "Not Valid",
    "description": "Simple website with http and css.",
    "unit": "link.com",
    "date": "01-18-22"
}

### Request 10: Retrieve should return the 6 projects we have created
GET http://localhost:3000/projects HTTP/1.1


### Request 11: Update the Deadlift with date 01-25-22. Set reps to 12 and 
###     unit to lbs (weight remains 30 and date remains 01-25-22)
### NOTE: Change the value of ID in the following URL to the ID assigned
###     to Deadlift with date 01-25-22. You can find that ID from the
###     previous retrieve request. It would be more convenitent to replace
###     all occurrences of the ID value in the file, since later tests
###     also use the ID for Deadlift with date 01-25-22
PUT http://localhost:3000/projects/63374512caf3dc98bef316fb HTTP/1.1
content-type: application/json

{
    "name": "Hash Map",
    "status": "Completed",
    "description": "An awesome hash map!",
    "link": "www.link.com",
    "date": "01-25-22"
}

### Request 12: Verify that the previous update set reps to 12 and unit
###     to lbs (weight remains 30)
### NOTE: Change the value of ID in the following URL to the ID assigned
###     to Deadlift with date 01-25-22.
GET http://localhost:3000/projects/63374512caf3dc98bef316fb HTTP/1.1


### Request 13: Update with missing property. 400 status code
### NOTE: Change the value of ID in the following URL to the ID assigned
###     to Deadlift with date 01-25-22.
PUT http://localhost:3000/projects/63374512caf3dc98bef316fb HTTP/1.1
content-type: application/json

{
    "name": "Hash Map",
    "status": "Completed",
    "link": "www.link.com",
    "date": "01-25-22"
}


### Request 14: Update with invalid property. 400 status code
### NOTE: Change the value of ID in the following URL to the ID assigned
###     to Deadlift with date 01-25-22.
PUT http://localhost:3000/projects/63374512caf3dc98bef316fb HTTP/1.1
content-type: application/json

{
    "name": "Hash Map",
    "status": "Not valid",
    "description": "An awesome hash map!",
    "link": "www.link.com",
    "date": "01-25-22"
}

### Request 16: Update for non-existent ID. 404 status code
PUT  http://localhost:3000/projects/6281146f945176f317005603 HTTP/1.1
content-type: application/json

{
    "name": "Deadlift",
    "reps": 12,
    "weight": 30,
    "unit": "lbs",
    "date": "06-25-21"
}


### Request 17: Retreive for non-existent ID. 404 status code
GET  http://localhost:3000/projects/6281146f945176f317005603 HTTP/1.1

### Request 11: Delete the Deadlift with date 01-25-22.
### NOTE: Change the value of ID in the following URL to the ID assigned
###     to Deadlift with date 01-25-22. You can find that ID from the
##      previous retrieve request
DELETE http://localhost:3000/projects/63374512caf3dc98bef316fb HTTP/1.1


### Request 18: Verify that the Deadlift on 01-25-22 has been deleted. 404 status code
GET http://localhost:3000/projects/63374512caf3dc98bef316fb HTTP/1.1


### Request 19: Verify that the Deadlift on 01-25-22 has been deleted
GET http://localhost:3000/projects HTTP/1.1


### Request 20: Delete for non-existent ID. 404 status code
DELETE http://localhost:3000/projects/6281b322c7c796ea344f05ee HTTP/1.1